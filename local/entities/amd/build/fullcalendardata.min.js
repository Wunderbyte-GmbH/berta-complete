define("local_entities/fullcalendardata",["exports","local_entities/fullcalendar","core/ajax"],(function(_exports,_fullcalendar,_ajax){var obj;
/*
   * @package    local_entities
   * @copyright  Wunderbyte GmbH <info@wunderbyte.at>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_ajax=(obj=_ajax)&&obj.__esModule?obj:{default:obj};var initialLocaleCode="",calendarEl="";_exports.init=function(entityid,locale){let jsondata=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;initialLocaleCode=locale,calendarEl=document.getElementById("entity-calendar"),jsondata?renderCalendar(jsondata):jsondata=getEntityCalendardata(entityid)};const renderCalendar=events=>{new _fullcalendar.Calendar(calendarEl,{timeZone:"UTC",eventStartEditable:!1,displayEventEnd:!0,headerToolbar:{left:"prev,next today",center:"title",right:"dayGridMonth,timeGridWeek,timeGridDay,listMonth"},locale:initialLocaleCode,buttonIcons:!1,weekNumbers:!0,navLinks:!0,editable:!0,dayMaxEvents:!0,events:events,buttonText:{prev:"Zurück",next:"Vor",today:"Heute",year:"Jahr",month:"Monat",week:"Woche",day:"Tag",list:"Terminübersicht"},weekText:"KW",weekTextLong:"Woche",allDayText:"Ganztägig",moreLinkText:function(n){return"+ weitere "+n},noEventsText:"Keine Ereignisse anzuzeigen",buttonHints:{prev:function(buttonText){return"Vorherige".concat(affix(buttonText)," ").concat(buttonText)},next:function(buttonText){return"Nächste".concat(affix(buttonText)," ").concat(buttonText)},today:function(buttonText){return"Tag"===buttonText?"Heute":"Diese".concat(affix(buttonText)," ").concat(buttonText)}},viewHint:function(buttonText){return buttonText+("Woche"===buttonText?"n":"Monat"===buttonText?"s":"es")+"ansicht"},navLinkHint:"Gehe zu $0",moreLinkHint:function(eventCnt){return"Zeige "+(1===eventCnt?"ein weiteres Ereignis":eventCnt+" weitere Ereignisse")},closeHint:"Schließen",timeHint:"Uhrzeit",eventHint:"Ereignis"}).render()};function affix(buttonText){return"Tag"===buttonText||"Monat"===buttonText?"r":"Jahr"===buttonText?"s":""}const getEntityCalendardata=entityid=>{let request={methodname:"local_entities_get_entity_calendardata",args:{id:entityid}};_ajax.default.call([request])[0].done((function(data){data.json?renderCalendar(JSON.parse(data.json)):console.log(data.error)})).fail()}}));

//# sourceMappingURL=fullcalendardata.min.js.map